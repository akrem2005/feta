import * as React from 'react';
import { ChatGroup } from '../Definitions';
export interface ChatListProps {
    room: string;
    className?: string;
    id?: string;
    groups?: ChatGroup[];
    maxGroupDuration?: number;
    render?: (props: ChatListRenderProps) => React.ReactNode;
    renderGroup?: (props: ChatGroup) => React.ReactNode;
    children?: React.ReactNode | ((props: ChatListRenderProps) => React.ReactNode);
}
export interface ChatListRenderProps {
    groups: ChatGroup[];
}
/**
 * @description
 *
 * @public
 *
 */
declare class ChatList extends React.Component<ChatListProps, any> {
    render(): string | number | boolean | React.ReactFragment | JSX.Element | null | undefined;
}
declare const _default: import("react-redux").ConnectedComponent<typeof ChatList, {
    key?: React.Key | null | undefined;
    ref?: React.LegacyRef<ChatList> | undefined;
    room: string;
    className?: string | undefined;
    id?: string | undefined;
    groups?: ChatGroup[] | undefined;
    maxGroupDuration?: number | undefined;
    render?: ((props: ChatListRenderProps) => React.ReactNode) | undefined;
    renderGroup?: ((props: ChatGroup) => React.ReactNode) | undefined;
    children?: React.ReactNode | ((props: ChatListRenderProps) => React.ReactNode);
    context?: React.Context<import("react-redux").ReactReduxContextValue<any, import("redux").AnyAction>> | undefined;
    store?: import("redux").Store<any, import("redux").AnyAction> | undefined;
}>;
export default _default;
